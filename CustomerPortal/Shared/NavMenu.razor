@inject ProtectedSessionStorage SessionStorage
@inject NavigationManager Navigation
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">CustomerPortal</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="/home" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>

        </div>

        @if (user?.role == 1)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="/dashboard">
                    <span class="oi oi-dashboard" aria-hidden="true"></span> Dashboard
                </NavLink>
            </div>
        }

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="/profile">
                <span class="oi oi-person" aria-hidden="true"></span> Profile
            </NavLink>
        </div>

        <li class="nav-item px-3">
            <NavLink class="nav-link" href="/test">
                <span class="oi oi-flash" aria-hidden="true"></span> Test Syncfusion
            </NavLink>
        </li>

        <div class="nav-item px-3 mt-3">
            <button class="btn btn-danger w-100" @onclick="Logout">
                <span class="oi oi-account-logout me-1" aria-hidden="true"></span> Logout
            </button>
        </div>
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;
    private CustomerPortal.Data.Customer? user;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private void Logout()
    {
        Navigation.NavigateTo("/login", true);
    }

    protected override async Task OnInitializedAsync()
    {
        var result = await SessionStorage.GetAsync<CustomerPortal.Data.Customer>("userData");
        if (result.Success)
        {
            user = result.Value;
        }
    }
}

